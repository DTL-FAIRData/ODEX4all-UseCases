source('~/Documents/ODEX4all/DB_Connect.R')
add.triple(store,subject,predicate,object)
save.rdf(store,"pp_accession.ttl","TURTLE")
add.triple(store,subject,predicate,object)
add.triple(store,subject,predicate,object)
add.triple(store,subject,predicate,object)
save.rdf(store,"pp_accession.ttl","TURTLE")
sample_data<-sample_data[,2:5]
#create triple data.frame for first accession name
subject="https://www.eu-sol.wur.nl/fair/v1/germplasm/"
predicate="http://example.org/Predicate/"
object="http://example.org/Object"
subject="https://www.eu-sol.wur.nl/fair/v1/germplasm/1"
predicate="http://example.org/Predicate/1"
object="http://example.org/Object1"
subject="https://www.eu-sol.wur.nl/fair/v1/germplasm/11"
predicate="http://example.org/Predicate/11"
object="http://example.org/Object11"
# Create a triple store
store = new.rdf()
add.triple(store,subject,predicate,object)
subject="https://www.eu-sol.wur.nl/fair/v1/germplasm/"
predicate="http://example.org/Predicate/"
object="http://example.org/Object"
add.triple(store,subject,predicate,object)
subject="https://www.eu-sol.wur.nl/fair/v1/germplasm/1"
predicate="http://example.org/Predicate/1"
object="http://example.org/Object1"
add.triple(store,subject,predicate,object)
save.rdf(store,"pp_accession.ttl","TURTLE")
sample_data<-rs[5693,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
sample_data
rs
heaD(rs)
head(rs)
sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
sample_data
row.names(sample_data)<-sample_data[,1]
sample_data
row.names(sample_data)<-sample_data[,1]
sample_data
sample_data<-sample_data[,2]
sample_data
row.names(sample_Data)
row.names(sample_data)
sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
row.names(sample_data)<-sample_data[,1]
sample_data<-sample_data[,2:3]
sample_data
sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
row.names(sample_data)<-sample_data[,1]
sample_data<-sample_data[,2:2]
sample_data
class(sample_data)
sample_data<-as.data.frame(sample_data[,2])
sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
row.names(sample_data)<-sample_data[,1]
sample_data<-as.data.frame(sample_data[,2])
class(sample_data)
sample_Data
sample_data
sample_data<-rs[1:5,c("accessionID","accessionName")]
sample_data
row.names(sample_data)<-sample_data[,1]
sample_data
sample_data[,-1]
colnames(sample_data[,-1])
colnames(sample_data[,c(-1)])
library(RMySQL)
sample_data<-data.frame(sample_data[,2])
sample_data
sample_data<-rs[1:5,c("accessionID","accessionName")]
sample_data
row.names(sample_data)<-sample_data[,1]
sample_data
sample_data<-rs[1:5,c("accessionID","accessionName")]
sample_data
dim(sample_data)
source('~/Documents/ODEX4all/DB_Connect.R')
sample_data[1]
sample_data[1,1]
paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample[1,1])
paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[1,1])
paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[1,1],"")
paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[1,1],sep="")
source('~/Documents/ODEX4all/DB_Connect.R')
source('~/Documents/ODEX4all/DB_Connect.R')
col.name(sample_data)
col.names(sample_data)
colnames
colnames(sample_data)
sample_data
sample_data[1,2]
source('~/Documents/ODEX4all/DB_Connect.R')
library(RMySQL)
#library(RDF)
library(rrdf)
#library(Rredland)
library(sqldf)
mydb = dbConnect(MySQL(), user='root', password='p051D0n10', dbname='breedb', host='localhost')
table_list<- dbListTables(mydb)
field_names<- dbListFields(mydb, 'pp_accession')
rs = dbGetQuery(mydb, "select * from pp_accession") # result remains on the MySQL database
# Filter for selected germ plasm field
# https://www.eu-sol.wur.nl/fair/v1/germplasm/EA00258
# Example row 5693
# sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
sample_data<-rs[1:5,c("accessionID","accessionName")]
# desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
#create triple data.frame for first accession name
# Create a triple store
store = new.rdf()
for (i in 1:dim(sample_data)[1]){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
predicate=paste("http://example.org/Predicate/",colnames(sample_data[2])
object=sample_data[i,2]
add.triple(store,subject,predicate,object)
}
for (i in 1:dim(sample_data)[1])){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
for (i in 1:dim(sample_data)[1]){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
predicate=paste("http://example.org/Predicate/",colnames(sample_data[2]))
object=sample_data[i,2]
add.triple(store,subject,predicate,object)
}
save.rdf(store,"pp_accession.ttl","TURTLE")
source('~/Documents/ODEX4all/DB_Connect.R')
library(RMySQL)
#library(RDF)
library(rrdf)
#library(Rredland)
library(sqldf)
mydb = dbConnect(MySQL(), user='root', password='p051D0n10', dbname='breedb', host='localhost')
table_list<- dbListTables(mydb)
field_names<- dbListFields(mydb, 'pp_accession')
rs = dbGetQuery(mydb, "select * from pp_accession") # result remains on the MySQL database
# Filter for selected germ plasm field
# https://www.eu-sol.wur.nl/fair/v1/germplasm/EA00258
# Example row 5693
# sample_data<-rs[1:5,c("accessionID","accessionName","gpsLat_txt","gpsLong_txt","taxonomyID","dateCreated")]
sample_data<-rs[1:5,c("accessionID","accessionName")]
# desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
#create triple data.frame for first accession name
# Create a triple store
store = new.rdf()
for (i in 1:dim(sample_data)[1]){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
predicate=paste("http://example.org/Predicate/",colnames(sample_data[2]),sep="")
object=sample_data[i,2]
add.triple(store,subject,predicate,object,sep="")
}
save.rdf(store,"pp_accession.ttl","TURTLE")
source('~/Documents/ODEX4all/DB_Connect.R')
source('~/Documents/ODEX4all/DB_Connect.R')
sample_data<-rs[,c("accessionID","accessionName")]
sample_data
# desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
#create triple data.frame for first accession name
# Create a triple store
store = new.rdf()
for (i in 1:dim(sample_data)[1]){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
predicate=paste("http://example.org/Predicate/",colnames(sample_data[2]),sep="")
object=sample_data[i,2]
add.triple(store,subject,predicate,object)
}
save.rdf(store,"pp_accession.ttl","TURTLE")
source('~/Documents/ODEX4all/DB_Connect.R')
source('~/Documents/ODEX4all/DB_Connect.R')
source('~/Documents/ODEX4all/BreeDB2RDF.R')
library(help=rdf)
library(help=rrdf)
source('~/Documents/ODEX4all/BreeDB2RDF.R')
source('~/Documents/ODEX4all/BreeDB2RDF.R')
source('~/Documents/ODEX4all/BreeDB2RDF.R')
source('~/Documents/ODEX4all/BreeDB2RDF.R')
library(rrdf)
vignette()
vignette("rrdf")
v1<-vignette("rrdf")
print(v1)
)
)
source('~/Documents/ODEX4all/Vignette_rrdf.R')
library(git2r)
path <- tempfile(pattern="git2r-")
dir.create(path)
repo <- init(path)
is_bare(repo)
path <- tempfile(pattern="git2r-")
dir.create(path)
path <- tempfile(pattern="git2r-")
dir.create(path)
is_bare(repo)
path <- file.path(tempfile(pattern="git2r-"), "git2r")
dir.create(path, recursive=TRUE)
repo <- clone("https://github.com/ropensci/git2r", path)
summary(repo)
getwd
getwd()
dir()
dir.create("./home/anandgavai/Documents/rrdf_vignette", recursive=TRUE)
path<-"/home/anandgavai/Documents/rrdf_vignette"
dir.create("./home/anandgavai/Documents/rrdf_vignette", recursive=TRUE)
path
repo <- clone("https://github.com/egonw/rrdf", path)
library(RMySQL)
library(rrdf)
library(rols)
library(paxtoolsr) # Access Pathway information in owl format
library(sqldf)  # Check Ontobee for a more comprehensive
mydb = dbConnect(MySQL(), user='root', password='p051D0n10', dbname='breedb', host='localhost')
table_list<- dbListTables(mydb)
field_names<- dbListFields(mydb, 'pp_accession')
dat = dbGetQuery(mydb, "select * from pp_accession") # result remains on the MySQL database
# Select latitude,longitude, collectionsitecountry, collectionSite, province
rs<-dat[,c("accessionID","accessionName","gpsLat","gpsLong","collectionSiteCountry","collectionSite","collectionSiteProvence")]
rs<-rs[which(rs[,"gpsLat"]!="NA"),]
# Filter for selected germ plasm field
# https://www.eu-sol.wur.nl/fair/v1/germplasm/EA00258
# Example row 5693
sample_data<-rs[,c("accessionID","accessionName")]
# desc<- dbGetQuery(mydb,"desc pp_accession ;") # get the description of the table metadata
# Create a triple store for each column make sure the primary key is the first column
# sample_data is table with 2 columns, prefix_pred is the prerix uri, type is the datatype of the column
# Create Triple store for data literals
create_triple_store_literal<-function(sample_data,prefix_pred,type){
# Create a triple store
store = new.rdf(ontology=TRUE)
for (i in 1:dim(sample_data)[1]){
subject=paste("https://www.eu-sol.wur.nl/fair/v1/germplasm/",sample_data[i,1],sep="")
predicate=paste(prefix_pred,colnames(sample_data[2]),sep="")
data=sample_data[i,2]
type=type
add.data.triple(store,subject,predicate,data,type)
}
save.rdf(store,paste(colnames(sample_data)[2],".ttl",sep=""),"TURTLE")
}
head(dat)
dat[,c(11,13)]
which(dat[,c(11,13)!="NA"]
)
which(dat[,11!]="NA")
which(dat[,11!]="NA")
which(dat[,11!]!="NA")
which(dat[,11]!="NA")
dat[which(dat[,11]!="NA"),]
dat[which(dat[,11]!="NA"),c(11,13)]
dat[which(dat[,11]!="NA"),c(1,11,13)]
dat[which(dat[,11]!="NA"),c(2,11,13)]
dat[which(dat[,11]!="NA"),c(3,11,13)]
colnames(dat)
dat[which(dat[,11]!="NA"),c(17,11,13)]
library(rjson)
vignette()
vignette("rjson")
vignette(package="rjson")
vignette(help="rjson")
dat[which(dat[,11]!="NA"),c(3,11,13)]
colnames(dat)
library(RMySQL)
library(rrdf)
library(rols)
library(paxtoolsr) # Access Pathway information in owl format
library(sqldf)  # Check Ontobee for a more comprehensive
mydb = dbConnect(MySQL(), user='root', password='p051D0n10', dbname='breedb', host='localhost')
table_list<- dbListTables(mydb)
field_names<- dbListFields(mydb, 'pp_accession')
dat = dbGetQuery(mydb, "select * from pp_accession") # result remains on the MySQL database
dat[which(dat[,11]!="NA"),c(11,13)]
colnames(dat)
dat[which(dat[,11]!="NA"),c(11,13)]
dat[which(dat[,11]!="NA"),c(11,13)][1]
dat[which(dat[,11]!="NA"),c(11,13)][1,]
dat[which(dat[,11]!="NA"),]
dat[which(dat[,11]!="NA"),][1,]
dat[which(dat[,11]!="NA"),][1,1]
dat[which(dat[,11]!="NA"),][,1]
dat[which(dat[,11]!="NA"),][,2]
colnames(dat)
dat[which(dat[,11]!="NA"),][,9]
dat[which(dat[,11]!="NA"),][,2]
dat[which(dat[,11]!="NA"),][,26]
dat[which(dat[,11]!="NA"),c(11,13)]
#Template
#https://www.eu-sol.wur.nl/fair/v1/germplasm/EA00258
library(rrdf)
library(rrdflibs)
library(RMySQL)
library(sqldf)
setwd("/home/anandgavai/Documents/ODEX4all/R_Scripts")
#setwd("\\\\psf\\Home\\Desktop\\Fair_BreeDB")
# Access the local database
mydb = dbConnect(MySQL(), user='root', password='p051D0n10', dbname='breedb', host='localhost')
table_list<- dbListTables(mydb)
field_names<- dbListFields(mydb, 'pp_accession')
dat = dbGetQuery(mydb, "select * from pp_accession") # result remains on the MySQL database
#dat<-read.csv("pp_accession.csv",header=TRUE)
# Selection for FAIR
lat_long<-paste(dat[,"gpsLat"],dat[,"gpsLong"],sep=",")
dat<-dat[,c("accessionID","accessionName","fromGenebankID","taxonomyID","collectionDate")]
dat<-cbind(dat,lat_long)
fairStore<-new.rdf(ontology=FALSE)
### Start adding  prefixes
#add.prefix(fairStore,"rdf","http://www.w3.org/1999/02/22-rdf-syntax-ns#")
#add.prefix(fairStore,"j.0","http://rs.tdwg.org/dwc/terms/")
#add.prefix(fairStore,"j.1","http://purl.org/germplasm/germplasmTerm#")
#add.prefix(fairStore,"j.2","http://www.w3.org/2003/01/geo/wgs84_pos#")
#Addition of predicates
accessionID<-"https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID="
scientificName<-"http://openlifedata.org/taxonomy:"
donoID<-"http://purl.org/cgngenis/accenumb/"
biologicalStatus<-"http://purl.org/germplasm/germplasmType#cultivatedHabitat/"
lat_long<-"http://www.w3.org/2003/01/geo/wgs84_pos#"
col_date<-"http://www.w3.org/TR/owl-time/"
accnNum<-"http://www.cropontology.org/terms/CO_715:0000227/Accession number"
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
#add.data.triple(fairStore,acnID,lat_long,ll,"string")
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#  add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
save.rdf(fairStore, "FAIR_Profile.ttl","TURTLE")
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll,"string")
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
#add.data.triple(fairStore,acnID,lat_long,ll,"string")
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
save.rdf(fairStore, "FAIR_Profile.ttl","TURTLE")
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll)
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
?add.data.triple
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll,"string","en")
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll,"en")
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll)
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
rm(list=ls())
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll)
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven,"string")
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
rm(list=ls())
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
createFairEntry<- function(row){
aID<-row[1]
genbankID<-row[3]
tID<-row[4]
cEven<-row[5]
ll<- row[6]
# Subject
acnID<- paste("https://www.eu-sol.wur.nl/passport/SelectAccessionByAccessionID.do?accessionID=",aID,sep="")
#  add.triple(fairStore,acnID,accessionID,aID)
#Predicates
add.data.triple(fairStore,acnID,lat_long,ll)
add.triple(fairStore,acnID,scientificName,tID)
add.triple(fairStore,acnID,donoID,genbankID)
#add.data.triple(fairStore,acnID,col_date,cEven)
add.triple(fairStore,acnID,accnNum,aID)
}
apply(dat, MARGIN=1, FUN=createFairEntry)
save.rdf(fairStore, "FAIR_Profile.ttl","TURTLE")
cat(asString.rdf(fairStore))
dat[5]
dat[5]
head(dat[5])
head(dat[5],n=20)
head(dat[5],n=30)
head(dat[5],n=100)
head(dat[5],n=200)
tail(dat[5],n=200)
dat[,5]
head(dat[,5])
head(dat[,5],n=100)
head(dat[,5],n=200)
head(dat[,5],n=300)
head(dat[,5],n=1000)
rm(list-ls())
rm(list=ls())
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
?save.rdf
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
source('~/Documents/ODEX4all/R_Scripts/FAIR_BreeDB_Profile.R')
